\ Use DMA with STM8L ADC
\ Internal reference voltage ( 1.22V ) is converted and stored in adcRI
\ during initialisation. "tadc" fills buffer "buff" with 4 conversions.

 
\res MCU: STM8L051
\res export CLK_PCKENR2 ADC1_CR1 ADC1_CR2 ADC1_CR3
\res export ADC1_SQR1 ADC1_SQR2 ADC1_SQR3 ADC1_SQR4
\res export ADC1_DRH ADC1_TRIGR1 ADC1_SR
\res export DMA1_GCSR DMA1_C0PARH DMA1_C0M0ARH DMA1_C0CR
\res export DMA1_C0SPR DMA1_C0NDTR 

#require ]B!
#require ]C!
#require WIPE

NVM

\ buffer for 4 adc conversions
VARIABLE buff 6 ALLOT
\ internal reference Voltage
VARIABLE adcRI


: *10us  ( n -- )  \  Richard's delay word, n * 10us
	1- FOR [
		$A62B ,    \      LD    A,#42
		$4A  C,    \ 1$:  DEC   A
		$26FD ,    \      JRNE  1$
	] NEXT
;

\ adc-dma initialisation
: adi ( --)
	[ $91 CLK_PCKENR2 ]C!	\ enable adc and dma in clock gating reg
	[ 1 ADC1_CR1 0 ]B!		\ adon in ADC1_CR1
	[ 7 ADC1_CR2 ]C!		\ 384 adc clock cycles for sampling
	[ $FF ADC1_CR3 ]C!		\ 384 clock cycles for vrefint sampling
	[ $90 ADC1_SQR1 ]C!		\ disable DMA, set CHSEL_VREFINT
	[ 1 ADC1_TRIGR1 4 ]B!	\ set bit 4 of ADC1_TRIGR1, VREFINTON
	&600 *10us 				\ vrefint has 3 ms startup time
	[ 1 ADC1_CR1 1 ]B!		\ start conversion
	[ $7201 , ADC1_SR , $FB C, ] \ wait for end of conversion
	ADC1_DRH @ adcRI !		\ store Vref_int
	[ 0 ADC1_TRIGR1 4 ]B!	\ reset bit 4 of ADC1_TRIGR1, VREFINTON
	[ 0 DMA1_GCSR 0 ]B!		\ DMA1_GCSR, global config & status reg., global disable
	ADC1_DRH DMA1_C0PARH !	\ write adc_dr addr to dma1 peripheral address reg.
	buff DMA1_C0M0ARH !		\ write buff address to dma1 memory address reg.
	[ 1 DMA1_C0CR 4 ]B!		\ DMA1_C0CR, Channel 0 config reg., set CIRC
	[ 1 DMA1_C0CR 5 ]B!		\ DMA1_C0CR, Channel 0 config reg., set MINCDEC
	[ $38 DMA1_C0SPR ]C!	\ DMA1_C0SPR, Channel status & priority reg.
							\		high priority, 16 bit data size
	[ 1 DMA1_GCSR 0 ]B!		\ DMA1_GCSR, global config & status reg., global enable
	[ 0 ADC1_SQR1 ]C!		\ reset Vrefint selection, enable DMA
	[ 6 ADC1_SQR2 ]C!		\ select channel 17 and 18 (PB1 and PB0) for scanning
	[ $80 ADC1_SQR3 ]C!		\ select channel 15 (PB3) for scanning
	[ $10 ADC1_SQR4 ]C!		\ select channel 4 (PC4) for scanning
	[ 0 DMA1_C0CR 0 ]B!		\ DMA1_C0CR, Channel 0 config reg., disable channel
	[ 4 DMA1_C0NDTR ]C!		\ DMA1_C0NDTR, Number of data to transfer,
	[ 1 DMA1_C0CR 0 ]B!		\ DMA1_C0CR, Channel 0 config reg., enable channel
;


\ trigger adc: fill buff
: tadc ( --)
	[ 1 ADC1_CR1 1 ]B!
\ wait for dma transaction to be completed, reset bit 1
	[ $7203 , DMA1_C0SPR , $FB C, ]
	[ 0 DMA1_C0SPR 1 ]B!
;

WIPE	\ return to RAM
